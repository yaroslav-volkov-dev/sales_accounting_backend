// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum PaymentMethod {
  CASH
  CARD
}

model Profile {
  id          String   @id @default(uuid()) @map("id")
  email       String
  firstName   String
  lastName    String
  phoneNumber String?
  createdAt   DateTime @default(now())
  Sale        Sale[]

  @@map("Profiles")
}

model Product {
  id         Int       @id @default(autoincrement())
  name       String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt()
  price      Int
  isActive   Boolean   @default(true)
  categoryId Int?
  supplierId Int?
  Category   Category? @relation(fields: [categoryId], references: [id])
  Supplier   Supplier? @relation(fields: [supplierId], references: [id])
  Sale       Sale[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  Product   Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt()
}

model Supplier {
  id          Int       @id @default(autoincrement())
  name        String
  phoneNumber String
  Product     Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt()
}

model Store {
  id          Int      @id @default(autoincrement())
  name        String
  location    String
  phoneNumber String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Shift       Shift[]
  Sale        Sale[]
}

model Shift {
  id        Int       @id @default(autoincrement())
  userId    String
  storeId   Int
  startedAt DateTime  @default(now())
  endedAt   DateTime?
  Store     Store     @relation(fields: [storeId], references: [id])
  Sale      Sale[]
}

model Sale {
  id            Int           @id @default(autoincrement())
  quantity      Int
  sellingPrice  Int
  paymentMethod PaymentMethod
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  productId     Int
  storeId       Int
  shiftId       Int
  userId        String
  Product       Product       @relation(fields: [productId], references: [id])
  Store         Store         @relation(fields: [storeId], references: [id])
  Shift         Shift         @relation(fields: [shiftId], references: [id])
  Profile       Profile       @relation(fields: [userId], references: [id])
}
